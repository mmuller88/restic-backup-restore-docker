{
	"info": {
		"_postman_id": "befdf33d-8148-4368-a8e9-ee75ca470446",
		"name": "Restic Restore Server",
		"description": "...\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "snapshots",
			"item": [
				{
					"name": "GET restore Snapshot 404 id doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b866c7a-d8a7-45ed-9ce1-5504e4b2a3aa",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/snapshots/123456f/restore",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshots",
								"123456f",
								"restore"
							]
						},
						"description": "Executes an restore based on the **short_id**\n"
					},
					"response": [
						{
							"name": "Snapshot id not found\n",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:shortId/restore?shortId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":shortId",
										"restore"
									],
									"query": [
										{
											"key": "shortId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "shortId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Not Found\"\n}"
						},
						{
							"name": "Snapshot restored successfully\n",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:shortId/restore?shortId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":shortId",
										"restore"
									],
									"query": [
										{
											"key": "shortId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "shortId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"15051ed1ea1d267c7f82ac0de63c0b1c3eafa4e3b7899f965fd23a50b009b2d6\",\n  \"short_id\": \"15051ed1\",\n  \"time\": \"\\\"2020-05-29T17:49:00.136672148Z\",\n  \"username\": \"root\",\n  \"hostname\": \"f1520eccaf43\",\n  \"tags\": [\n   \"test\",\n   \"test\"\n  ],\n  \"tree\": \"b2325742d7eb352315fda12205883d66dacae46601ecc0067d1f0f94f577ac52\",\n  \"paths\": [\n   \"/data\",\n   \"/data\"\n  ]\n },\n {\n  \"id\": \"15051ed1ea1d267c7f82ac0de63c0b1c3eafa4e3b7899f965fd23a50b009b2d6\",\n  \"short_id\": \"15051ed1\",\n  \"time\": \"\\\"2020-05-29T17:49:00.136672148Z\",\n  \"username\": \"root\",\n  \"hostname\": \"f1520eccaf43\",\n  \"tags\": [\n   \"test\",\n   \"test\"\n  ],\n  \"tree\": \"b2325742d7eb352315fda12205883d66dacae46601ecc0067d1f0f94f577ac52\",\n  \"paths\": [\n   \"/data\",\n   \"/data\"\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "get Snapshots",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c9e3141-c199-49ef-baf0-3c6409ca063a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Your test name\", function () {",
									"    pm.expect(jsonData.length).to.equal(3);",
									"});",
									"",
									"pm.globals.set(\"short_id\", jsonData[0].short_id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fd6f14ba-758e-41fd-8b34-be42cbc42f5c",
								"exec": [
									"setTimeout(function () { }, [1000]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/snapshots",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshots"
							]
						},
						"description": "List all snapshots\n"
					},
					"response": [
						{
							"name": "List all available snapshots\n",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshots",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"15051ed1ea1d267c7f82ac0de63c0b1c3eafa4e3b7899f965fd23a50b009b2d6\",\n  \"short_id\": \"15051ed1\",\n  \"time\": \"\\\"2020-05-29T17:49:00.136672148Z\",\n  \"username\": \"root\",\n  \"hostname\": \"f1520eccaf43\",\n  \"tags\": [\n   \"test\",\n   \"test\"\n  ],\n  \"tree\": \"b2325742d7eb352315fda12205883d66dacae46601ecc0067d1f0f94f577ac52\",\n  \"paths\": [\n   \"/data\",\n   \"/data\"\n  ]\n },\n {\n  \"id\": \"15051ed1ea1d267c7f82ac0de63c0b1c3eafa4e3b7899f965fd23a50b009b2d6\",\n  \"short_id\": \"15051ed1\",\n  \"time\": \"\\\"2020-05-29T17:49:00.136672148Z\",\n  \"username\": \"root\",\n  \"hostname\": \"f1520eccaf43\",\n  \"tags\": [\n   \"test\",\n   \"test\"\n  ],\n  \"tree\": \"b2325742d7eb352315fda12205883d66dacae46601ecc0067d1f0f94f577ac52\",\n  \"paths\": [\n   \"/data\",\n   \"/data\"\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "restore Snapshot",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2aed2115-ce20-4c99-a3d0-c952ca2b8f42",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/snapshots/{{short_id}}/restore",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snapshots",
								"{{short_id}}",
								"restore"
							]
						},
						"description": "Executes an restore based on the **short_id**\n"
					},
					"response": [
						{
							"name": "Snapshot restored successfully\n",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:shortId/restore?shortId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":shortId",
										"restore"
									],
									"query": [
										{
											"key": "shortId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "shortId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"15051ed1ea1d267c7f82ac0de63c0b1c3eafa4e3b7899f965fd23a50b009b2d6\",\n  \"short_id\": \"15051ed1\",\n  \"time\": \"\\\"2020-05-29T17:49:00.136672148Z\",\n  \"username\": \"root\",\n  \"hostname\": \"f1520eccaf43\",\n  \"tags\": [\n   \"test\",\n   \"test\"\n  ],\n  \"tree\": \"b2325742d7eb352315fda12205883d66dacae46601ecc0067d1f0f94f577ac52\",\n  \"paths\": [\n   \"/data\",\n   \"/data\"\n  ]\n },\n {\n  \"id\": \"15051ed1ea1d267c7f82ac0de63c0b1c3eafa4e3b7899f965fd23a50b009b2d6\",\n  \"short_id\": \"15051ed1\",\n  \"time\": \"\\\"2020-05-29T17:49:00.136672148Z\",\n  \"username\": \"root\",\n  \"hostname\": \"f1520eccaf43\",\n  \"tags\": [\n   \"test\",\n   \"test\"\n  ],\n  \"tree\": \"b2325742d7eb352315fda12205883d66dacae46601ecc0067d1f0f94f577ac52\",\n  \"paths\": [\n   \"/data\",\n   \"/data\"\n  ]\n }\n]"
						},
						{
							"name": "Snapshot id not found\n",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snapshots/:shortId/restore?shortId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snapshots",
										":shortId",
										"restore"
									],
									"query": [
										{
											"key": "shortId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "shortId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Not Found\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "39d33ab8-b710-4bb0-8794-63426234b7f4",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0c2e87a5-f885-4c4d-b9e1-1252805cacdd",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "fb50523d-5502-439a-b8db-3b144ea9b611",
			"key": "baseUrl",
			"value": "http://localhost:80",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}